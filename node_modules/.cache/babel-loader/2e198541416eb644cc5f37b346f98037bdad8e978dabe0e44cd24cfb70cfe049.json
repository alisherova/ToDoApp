{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = [];\nconst todoReducer = createSlice({\n  name: \"todos\",\n  initialState,\n  reducers: {\n    addTodos: (state, action) => {\n      return [...state, action.payload];\n    },\n    removeTodos: (state, action) => {\n      return state.filter(todo => todo.id !== action.payload);\n    },\n    updateTodos: (state, action) => {\n      return state.map(todo => {\n        if (todo.id === action.payload.id) {\n          return {\n            ...todo,\n            todo: action.payload.todo\n          };\n        }\n        return todo;\n      });\n    },\n    completeTodos: (state, action) => {\n      return state.map(todo => {\n        if (todo.id === action.payload) {\n          return {\n            ...todo,\n            completed: true\n          };\n        }\n        return todo;\n      });\n    }\n  }\n});\nexport const {\n  addTodos,\n  removeTodos,\n  updateTodos,\n  completeTodos\n} = todoReducer.actions;\nexport const reducer = todoReducer.reducer;","map":{"version":3,"names":["createSlice","initialState","todoReducer","name","reducers","addTodos","state","action","payload","removeTodos","filter","todo","id","updateTodos","map","completeTodos","completed","actions","reducer"],"sources":["/home/itproger/Desktop/toDo_redux/to_do_app/src/redux/ToDoReducer.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = [];\n\nconst todoReducer = createSlice({\n  name: \"todos\",\n  initialState,\n  reducers: {\n    addTodos: (state, action) => {\n      return [...state, action.payload];\n    },\n    removeTodos: (state, action) => {\n      return state.filter((todo) => todo.id !== action.payload);\n    },\n    updateTodos: (state, action) => {\n      return state.map((todo) => {\n        if (todo.id === action.payload.id) {\n          return {\n            ...todo,\n            todo: action.payload.todo,\n          };\n        }\n        return todo;\n      });\n    },\n    completeTodos: (state, action) => {\n      return state.map((todo) => {\n        if (todo.id === action.payload) {\n          return {\n            ...todo,\n            completed: true,\n          };\n        }\n        return todo;\n      });\n    },\n  },\n});\n\nexport const { addTodos, removeTodos, updateTodos, completeTodos } =\n  todoReducer.actions;\nexport const reducer = todoReducer.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG,EAAE;AAEvB,MAAMC,WAAW,GAAGF,WAAW,CAAC;EAC9BG,IAAI,EAAE,OAAO;EACbF,YAAY;EACZG,QAAQ,EAAE;IACRC,QAAQ,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC3B,OAAO,CAAC,GAAGD,KAAK,EAAEC,MAAM,CAACC,OAAO,CAAC;IACnC,CAAC;IACDC,WAAW,EAAEA,CAACH,KAAK,EAAEC,MAAM,KAAK;MAC9B,OAAOD,KAAK,CAACI,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKL,MAAM,CAACC,OAAO,CAAC;IAC3D,CAAC;IACDK,WAAW,EAAEA,CAACP,KAAK,EAAEC,MAAM,KAAK;MAC9B,OAAOD,KAAK,CAACQ,GAAG,CAAEH,IAAI,IAAK;QACzB,IAAIA,IAAI,CAACC,EAAE,KAAKL,MAAM,CAACC,OAAO,CAACI,EAAE,EAAE;UACjC,OAAO;YACL,GAAGD,IAAI;YACPA,IAAI,EAAEJ,MAAM,CAACC,OAAO,CAACG;UACvB,CAAC;QACH;QACA,OAAOA,IAAI;MACb,CAAC,CAAC;IACJ,CAAC;IACDI,aAAa,EAAEA,CAACT,KAAK,EAAEC,MAAM,KAAK;MAChC,OAAOD,KAAK,CAACQ,GAAG,CAAEH,IAAI,IAAK;QACzB,IAAIA,IAAI,CAACC,EAAE,KAAKL,MAAM,CAACC,OAAO,EAAE;UAC9B,OAAO;YACL,GAAGG,IAAI;YACPK,SAAS,EAAE;UACb,CAAC;QACH;QACA,OAAOL,IAAI;MACb,CAAC,CAAC;IACJ;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEN,QAAQ;EAAEI,WAAW;EAAEI,WAAW;EAAEE;AAAc,CAAC,GAChEb,WAAW,CAACe,OAAO;AACrB,OAAO,MAAMC,OAAO,GAAGhB,WAAW,CAACgB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}