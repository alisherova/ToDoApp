{"ast":null,"code":"import { createSlice, current } from \"@reduxjs/toolkit\";\nconst initialState = [{\n  key: 1,\n  id: 1,\n  todo: \"Check email\",\n  completed: false\n}, {\n  key: 2,\n  id: 2,\n  todo: \"Walk the dog\",\n  completed: false\n}, {\n  key: 3,\n  id: 3,\n  todo: \"Go to gym\",\n  completed: false\n}];\nconst ToDoSlice = createSlice({\n  name: \"todos\",\n  initialState,\n  reducers: {\n    addTodos: (state, action) => {\n      return [...state, action.payload];\n    },\n    removeTodos: (state, action) => {\n      return state.filter(todo => todo.id !== action.payload);\n    },\n    completeTodos: (state, action) => {\n      const from = 0;\n      state.map((todo, index) => {\n        if (todo.id === action.payload) {\n          todo.completed = true;\n          from = index;\n          state = state.splice(state.length, 0, state.splice(from, 1)[0]);\n          // return todo;\n        }\n      });\n    }\n  }\n});\nexport const {\n  addTodos,\n  removeTodos,\n  updateTodos,\n  completeTodos,\n  toggleTodo\n} = ToDoSlice.actions;\nexport const toDoRerducer = ToDoSlice.reducer;","map":{"version":3,"names":["createSlice","current","initialState","key","id","todo","completed","ToDoSlice","name","reducers","addTodos","state","action","payload","removeTodos","filter","completeTodos","from","map","index","splice","length","updateTodos","toggleTodo","actions","toDoRerducer","reducer"],"sources":["/home/itproger/Desktop/toDo_redux/to_do_app/src/redux/ToDoReducer.js"],"sourcesContent":["import { createSlice, current } from \"@reduxjs/toolkit\";\n\nconst initialState = [\n  { key: 1, id: 1, todo: \"Check email\", completed: false },\n  { key: 2, id: 2, todo: \"Walk the dog\", completed: false },\n  { key: 3, id: 3, todo: \"Go to gym\", completed: false },\n];\n\nconst ToDoSlice = createSlice({\n  name: \"todos\",\n  initialState,\n  reducers: {\n    addTodos: (state, action) => {\n      return [...state, action.payload];\n    },\n    removeTodos: (state, action) => {\n      return state.filter((todo) => todo.id !== action.payload);\n    },\n    completeTodos: (state, action) => {\n      const from = 0;\n      state.map((todo, index) => {\n        if (todo.id === action.payload) {\n          todo.completed = true;\n          from = index;\n          state = state.splice(state.length, 0, state.splice(from, 1)[0]);\n          // return todo;\n        }\n      });\n    },\n  },\n});\n\nexport const { addTodos, removeTodos, updateTodos, completeTodos, toggleTodo } =\n  ToDoSlice.actions;\nexport const toDoRerducer = ToDoSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,OAAO,QAAQ,kBAAkB;AAEvD,MAAMC,YAAY,GAAG,CACnB;EAAEC,GAAG,EAAE,CAAC;EAAEC,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,aAAa;EAAEC,SAAS,EAAE;AAAM,CAAC,EACxD;EAAEH,GAAG,EAAE,CAAC;EAAEC,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,cAAc;EAAEC,SAAS,EAAE;AAAM,CAAC,EACzD;EAAEH,GAAG,EAAE,CAAC;EAAEC,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,WAAW;EAAEC,SAAS,EAAE;AAAM,CAAC,CACvD;AAED,MAAMC,SAAS,GAAGP,WAAW,CAAC;EAC5BQ,IAAI,EAAE,OAAO;EACbN,YAAY;EACZO,QAAQ,EAAE;IACRC,QAAQ,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC3B,OAAO,CAAC,GAAGD,KAAK,EAAEC,MAAM,CAACC,OAAO,CAAC;IACnC,CAAC;IACDC,WAAW,EAAEA,CAACH,KAAK,EAAEC,MAAM,KAAK;MAC9B,OAAOD,KAAK,CAACI,MAAM,CAAEV,IAAI,IAAKA,IAAI,CAACD,EAAE,KAAKQ,MAAM,CAACC,OAAO,CAAC;IAC3D,CAAC;IACDG,aAAa,EAAEA,CAACL,KAAK,EAAEC,MAAM,KAAK;MAChC,MAAMK,IAAI,GAAG,CAAC;MACdN,KAAK,CAACO,GAAG,CAAC,CAACb,IAAI,EAAEc,KAAK,KAAK;QACzB,IAAId,IAAI,CAACD,EAAE,KAAKQ,MAAM,CAACC,OAAO,EAAE;UAC9BR,IAAI,CAACC,SAAS,GAAG,IAAI;UACrBW,IAAI,GAAGE,KAAK;UACZR,KAAK,GAAGA,KAAK,CAACS,MAAM,CAACT,KAAK,CAACU,MAAM,EAAE,CAAC,EAAEV,KAAK,CAACS,MAAM,CAACH,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UAC/D;QACF;MACF,CAAC,CAAC;IACJ;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEP,QAAQ;EAAEI,WAAW;EAAEQ,WAAW;EAAEN,aAAa;EAAEO;AAAW,CAAC,GAC5EhB,SAAS,CAACiB,OAAO;AACnB,OAAO,MAAMC,YAAY,GAAGlB,SAAS,CAACmB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}