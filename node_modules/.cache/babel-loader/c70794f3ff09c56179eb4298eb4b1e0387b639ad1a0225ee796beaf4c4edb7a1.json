{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = [{\n  id: Date.now(),\n  todo: \"\",\n  completed: false\n}];\nconst ToDoSlice = createSlice({\n  name: \"todos\",\n  initialState,\n  reducers: {\n    addTodos: (state, action) => {\n      return [...state, action.payload];\n    },\n    removeTodos: (state, action) => {\n      return state.filter(todo => todo.id !== action.payload);\n    },\n    completeTodos: (state, action) => {\n      return state.map(todo => {\n        if (todo.id === action.payload) {\n          // state = state[state.length - 1] = todo;\n          return {\n            ...todo,\n            completed: true\n          };\n        }\n        console.log(todo);\n        return todo;\n      });\n    }\n  }\n});\nexport const {\n  addTodos,\n  removeTodos,\n  updateTodos,\n  completeTodos,\n  toggleTodo\n} = ToDoSlice.actions;\nexport const toDoRerducer = ToDoSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","id","Date","now","todo","completed","ToDoSlice","name","reducers","addTodos","state","action","payload","removeTodos","filter","completeTodos","map","console","log","updateTodos","toggleTodo","actions","toDoRerducer","reducer"],"sources":["/home/itproger/Desktop/toDo_redux/to_do_app/src/redux/ToDoReducer.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = [{ id: Date.now(), todo: \"\", completed: false }];\n\nconst ToDoSlice = createSlice({\n  name: \"todos\",\n  initialState,\n  reducers: {\n    addTodos: (state, action) => {\n      return [...state, action.payload];\n    },\n    removeTodos: (state, action) => {\n      return state.filter((todo) => todo.id !== action.payload);\n    },\n    completeTodos: (state, action) => {\n      return state.map((todo) => {\n        if (todo.id === action.payload) {\n          // state = state[state.length - 1] = todo;\n          return {\n            ...todo,\n            completed: true,\n          };\n        }\n        console.log(todo);\n        return todo;\n      });\n    },\n  },\n});\n\nexport const { addTodos, removeTodos, updateTodos, completeTodos, toggleTodo } =\n  ToDoSlice.actions;\nexport const toDoRerducer = ToDoSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG,CAAC;EAAEC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;EAAEC,IAAI,EAAE,EAAE;EAAEC,SAAS,EAAE;AAAM,CAAC,CAAC;AAErE,MAAMC,SAAS,GAAGP,WAAW,CAAC;EAC5BQ,IAAI,EAAE,OAAO;EACbP,YAAY;EACZQ,QAAQ,EAAE;IACRC,QAAQ,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC3B,OAAO,CAAC,GAAGD,KAAK,EAAEC,MAAM,CAACC,OAAO,CAAC;IACnC,CAAC;IACDC,WAAW,EAAEA,CAACH,KAAK,EAAEC,MAAM,KAAK;MAC9B,OAAOD,KAAK,CAACI,MAAM,CAAEV,IAAI,IAAKA,IAAI,CAACH,EAAE,KAAKU,MAAM,CAACC,OAAO,CAAC;IAC3D,CAAC;IACDG,aAAa,EAAEA,CAACL,KAAK,EAAEC,MAAM,KAAK;MAChC,OAAOD,KAAK,CAACM,GAAG,CAAEZ,IAAI,IAAK;QACzB,IAAIA,IAAI,CAACH,EAAE,KAAKU,MAAM,CAACC,OAAO,EAAE;UAC9B;UACA,OAAO;YACL,GAAGR,IAAI;YACPC,SAAS,EAAE;UACb,CAAC;QACH;QACAY,OAAO,CAACC,GAAG,CAACd,IAAI,CAAC;QACjB,OAAOA,IAAI;MACb,CAAC,CAAC;IACJ;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEK,QAAQ;EAAEI,WAAW;EAAEM,WAAW;EAAEJ,aAAa;EAAEK;AAAW,CAAC,GAC5Ed,SAAS,CAACe,OAAO;AACnB,OAAO,MAAMC,YAAY,GAAGhB,SAAS,CAACiB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}