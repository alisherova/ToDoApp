{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = [];\nconst checkboxSlice = createSlice({\n  name: \"checkbox\",\n  initialState,\n  reducers: {\n    toggleTodo(state, action) {\n      const {\n        id\n      } = action.payload;\n      const todo = state.todos.find(todo => todo.id === id);\n      if (todo) {\n        todo.completed = !todo.completed;\n      }\n    }\n  }\n});\nexport const {\n  toggleCheckbox\n} = checkboxSlice.actions;\nexport const checkboxReducer = checkboxSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","checkboxSlice","name","reducers","toggleTodo","state","action","id","payload","todo","todos","find","completed","toggleCheckbox","actions","checkboxReducer","reducer"],"sources":["/home/itproger/Desktop/toDo_redux/to_do_app/src/redux/CheckboxReducer.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = [];\n\nconst checkboxSlice = createSlice({\n  name: \"checkbox\",\n  initialState,\n  reducers: {\n    toggleTodo(state, action) {\n      const { id } = action.payload;\n      const todo = state.todos.find((todo) => todo.id === id);\n      if (todo) {\n        todo.completed = !todo.completed;\n      }\n    },\n  },\n});\n\nexport const { toggleCheckbox } = checkboxSlice.actions;\nexport const checkboxReducer = checkboxSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG,EAAE;AAEvB,MAAMC,aAAa,GAAGF,WAAW,CAAC;EAChCG,IAAI,EAAE,UAAU;EAChBF,YAAY;EACZG,QAAQ,EAAE;IACRC,UAAUA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACxB,MAAM;QAAEC;MAAG,CAAC,GAAGD,MAAM,CAACE,OAAO;MAC7B,MAAMC,IAAI,GAAGJ,KAAK,CAACK,KAAK,CAACC,IAAI,CAAEF,IAAI,IAAKA,IAAI,CAACF,EAAE,KAAKA,EAAE,CAAC;MACvD,IAAIE,IAAI,EAAE;QACRA,IAAI,CAACG,SAAS,GAAG,CAACH,IAAI,CAACG,SAAS;MAClC;IACF;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEC;AAAe,CAAC,GAAGZ,aAAa,CAACa,OAAO;AACvD,OAAO,MAAMC,eAAe,GAAGd,aAAa,CAACe,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}